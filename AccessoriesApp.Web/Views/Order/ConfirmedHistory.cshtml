@using static AccessoriesApp.GCommon.ApplicationConstants
@using AccessoriesApp.Web.ViewModels
@model OrderFilterViewModel


@{
    ViewData["Title"] = "Index";
}


<div class="container mt-3">

    <!-- Header wrapped in the same row/column structure -->
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="d-flex justify-content-between align-items-center mb-1">
                <h1 class="text-muted fw-bold">My Confirmed orders</h1>
                <a asp-controller="Home" asp-action="Index" class="btn btn-secondary fw-bold">
                    <i class="bi bi-arrow-left"></i> Back to Home Page
                </a>
            </div>
        </div>
    </div>


    <div class="row justify-content-center my-3">
    <div class="col-md-8">

        <div class="card shadow-lg rounded-4">
                <div class="card-header bg-primary text-white text-center rounded-top-4">
                    <h5 class="mb-0"><i class="bi bi-person-plus-fill me-2"></i>Order period</h5>
                </div>
                <div class="card-body p-4">

    <form asp-action="ConfirmedHistory" method="post" class="row mb-2" >
    
        <div class="col-md-4">
        <label asp-for="StartDate" class="form-label">Start Date</label>
        <div class="input-group date mydatepicker">  
        <input asp-for="StartDate" class="form-control" type="text"  />
        <div class="input-group-addon input-group-text">                      
        <img src="~/images/calendar.svg" width="17" height="17"  />
        </div>
        </div>
    </div>
    <div class="col-md-4">
        <label asp-for="EndDate" class="form-label">End Date</label>
        <div class="input-group date mydatepicker">  
        <input asp-for="EndDate" class="form-control" type="text"  />
        <div class="input-group-addon input-group-text">                      
        <img src="~/images/calendar.svg" width="17" height="17"  />
        </div>
        </div>
    </div>
    <div class="col-md-4 d-flex align-self-end  justify-content-center">
        <button type="submit" class="btn btn-primary w-100 mt-3">Search</button>
    </div>
    
    </form>
     </div>
     </div>

    </div>
    </div>

    @if ((Model == null || !Model.Orders.Any()) && !string.IsNullOrWhiteSpace(Model?.StartDate.ToString()) && !string.IsNullOrWhiteSpace(Model?.EndDate.ToString()))
    {
        <div class="alert alert-warning">
            No orders for this period!
        </div>
    }



@foreach (var item in Model.Orders)
{

var modalId = $"detailsModal_{item.Id}";

<div class="row justify-content-center mt-1">
    <div class="col-md-8">

        <div class="card mb-3">
            <div class="card-header">
                <h4 class="text-muted fw-bold">Shopping cart ID @item.Id</h4>
            </div>
            <div class="card-body d-flex flex-column">                
                    <p class="card-text">User name: @item.OrderUserName</p>
                    <p class="card-text">TotalCountProducts: @item.TotalCountProducts</p>
                    <p class="card-text">PriceBGN: @item.TotalPriceBGN BGN</p>
                    <p class="card-text">PriceEuro: @item.TotalPriceEuro &euro;</p>
                    <p class="card-text">CourierName: @item.CourierName</p>
                    <p class="card-text">IsOrderConfirmed: @item.IsOrderConfirmed</p>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#@modalId">
                    View Details
                </button>
            </div>
        </div>

    </div>
</div>


<!-- Modal -->
    <div class="modal fade" id="@modalId" tabindex="-1" aria-labelledby="@($"{modalId}Label")" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-1">

                @foreach (var orderitem in item.OrderItems)
                {
                    <div class="card mt-2">
                        <div class="row justify-content-center">
                            <div class="col-md-4 text-center">

                                    @if (orderitem.Image != null)
                                {
                                        <a asp-controller="Accessories" asp-action="Details" asp-route-id="@orderitem.OrderItemAccessoryId">
                                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(orderitem.Image)" class="img-fluid w-100 h-100 object-fit-cover" style="max-height: 150px;" alt="@orderitem.Title">
                                    </a>
                                }
                                else
                                {
                                        <a asp-controller="Accessories" asp-action="Details" asp-route-id="@orderitem.OrderItemAccessoryId">
                                        <img src="~/images/default-image.jpg" class="img-fluid w-100 h-100 object-fit-cover" style="max-height: 150px; object-fit: contain;" alt="No Image Available">
                                    </a>
                                }
                            </div>

                            <div class="col-md-8">
                                <div class="card-body d-flex flex-column p-1">
                                        <h5 class="card-title">@orderitem.Title</h5>
                                        <div class="card-text mt-1">Category: @orderitem.CategoryName</div>
                                        <div class="card-text mt-1">PriceBGN: @orderitem.PriceBGN BGN</div>
                                        <div class="card-text mt-1">PriceEuro: @orderitem.PriceEuro &euro;</div>
                                        <div class="card-text mt-1">Quantity: @orderitem.Quantity</div>
                                        <div class="card-text mt-1">Total price BGN: @(orderitem.Quantity* orderitem.PriceBGN) BGN</div>
                                        <div class="card-text mt-1">Total price Euro: @(orderitem.Quantity* orderitem.PriceEuro) &euro;</div>
                                </div>
                            </div>

                        </div>
                    </div>
                }

            </div>
            <div class="modal-footer p-1">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

}

</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
